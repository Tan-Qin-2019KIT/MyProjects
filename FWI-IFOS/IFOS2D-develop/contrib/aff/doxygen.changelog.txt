/*! \file doxygen.changelog.txt
 * \brief ChangeLog for C++ containers for numbers (libaff)
 *
 * ----------------------------------------------------------------------------
 *
 * $Id$
 * 
 * Copyright (c) 2002 by Thomas Forbriger (IMG Frankfurt) 
 * 
 * C++ containers for numbers (libaff)
 *
 * ----
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version. 
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 * ----
 *
 * This file contains:
 *  - \ref page_changelog
 *  - \ref page_project_status
 * 
 * REVISIONS and CHANGES 
 *  - 17/12/2002   V1.0   Thomas Forbriger 
 *  - 12/06/2013   V1.1   renamed file
 * 
 * ============================================================================
 */

/*! \page page_changelog ChangeLog (AFF)

  $Id$

  \sa \ref page_project_status

  Major changes in the interface of the library are marked by \b !!.

  - 21/06/2011 (thof)
    - allow shape modification of arrays by explicit access

  - 15/05/2011 (thof)
    - added converters.h for conversion of aff::Series containers in
      particular.

  - 14/05/2011 (thof)
    - added Carray.h and Carray.cc to provide interfaces to arrays in raw
      memory.

  - 10/11/2010 (thof)
    - removed code fragments for precompiled templates 
    - joined array_dec.h and array_def.h in array.h

  - \b 11/12/2007 (thof)
    - the library compiles well on a 64bit system (Fenoglio)
    - test programs (including g77 and f2c version of f77test) compile well
      and provide the same results as previously on 32bit systems

  - \b 13/06/2007 (thof)
    - added aff::func::sum() and aff::func::sqrsum()

  - \b 20/06/2006 (thof)
    - aff::Series objects may now be initialized with size zero
      defined by aff::LinearShape

  - \b 19/06/2006 (thof)
    - \b !! aff::ConstArray as well as aff::ConstSeries now offer the typedefs
      Tvalue, Tpointer, and Treference as non-const types
  
  - \b 28/04/2006 (thof)
    - classes with virtual functions (here exception classes) require the
      explicit definition of a virtual destructor

  - \b 27/04/2006 (thof)
    - Constructor of aff::LinearShape (shape class for aff::Series)
      was asserting last index > first index, which is to strict. 
      One-element arrays will have last=first, which is perfectly reasonable.
      Assertion is now: last >= first

  - \b 05/07/2005 (thof)
    - track down design decision for const container data modification
      (04/07/2005) to operators
    - provide index shifting in LinearShape

  - \b 04/07/2005 (thof)
    - \b !! removed lib/range.h, since the was no kind of array container.
      Range classes already exist elsewhere (libtfxx, libpgplotxx).
    - \b !! data modification is allowed through instances being declared
      const (\ref sec_design_const_approach).
    - aff::Series provides pointer access to underlying C-style array.

  - \b 28/04/2005 (thof)
    - added code for aff::func::histo()
    - introduced Tretval to all collector help classes and to collect function
      itself

  - \b 21/04/2005 (thof)
    - aff::func::avg() and underlying code works.
    - added code for functions aff::func::rms(), aff::func::min(), 
        aff::func::max()

  - \b 20/03/2005 (thof)
    - Added function templates to scan and map values in containers.
      They are collected in subdirectory functions and use collector.h and
      mapper.h
  
  - \b 10/02/2004 (thof)
    - removed lib/iteratable.h
    - explained this decision:
      \ref sec_design_interface_nobaseclass
    - started with operators:
      arrayoperators.h, seriesoperators.h, and lib/operators.h
    - introduced tests/operatortest.h
    - basic operators work for aff::Array and aff::Series
    - added operators combining containers

  - \b 07/02/2004 (thof)
    - index limit set operations available through aff::Series

  - \b 13/01/2004 (thof)
    - added shrink function to aff::LinearShape so that aff::subarray is
      applicable to aff::Series
    - corrected constructor from shape and representation in aff::Series to
      initialize base class first

  - \b 11/01/2004 (thof)
    - added index range modifiers to aff::LinearShape

  - \b 23/12/2003 (thof)
    - defined Browser
    - made Browser run with Series class (involves updates to SeriesStepper)
    - created lib/linearshape.h to allow correct include order within
      series.h
  
  - \b 19/12/2003 (thof)
    - TConstSharedHeap now allocates one element in the default constructor.
    - \b !! cleaned all constructors of aff::ConstSeries and aff::Series
    - \b !! parameters of constructor of aff::LinearShape have a new meaning
    - index check now should work (aff::SharedHeap)

  - \b 27/06/2003 (thof)
    - introduced aff::Iteratable
    - documentation now works for doxygen-1.3.2

  - \b 09/01/2003 (thof)
    - aff::Shaper, aff::util::Subarray, and aff::util::Slice now throw
      exceptions in case the user tries to specify too many dimensions by
      bracket operators.

  - \b 04/01/2003 (thof)
    - aff::deepcopy now converts to Tcontainer. And aff::util::Subarray
      and aff::util::Slice therefore provide a Tcontainer typedef. See also
      \ref sec_design_interface_tcontainer.

  - \b 03/01/2003 (thof)
    - introduced lib/checkedcast.h and aff::util::SizeCheckedCast
    - \b !! aff::FortranArray now takes container type as template argument
    - copyout function now returns an aff::Array rather
      than an aff::ConstArray
    - aff::Array inherits copyout from aff::ConstArray
    - copyout now tested by tests/arraytest.cc
    - \b !! aff::deepcopy is now placed in namespace aff, because it may prove
      useful to external user together with slices and subarrays

  - \b 31/12/2002 (thof)
    - NULL is deprecated as pointed out by Wolfgang (replaced by literal 0 in
      lib/error.cc and lib/sharedheap_def.h)
    - Removed non-initializing constructors in aff::ConstArray and
      aff::ConstSeries (except default constructor, which is needed, when
      object is a container's element) as suggested by Wolfgang.
    - removed constructor from Theadstruct in aff::ConstSharedHeap
    - made the non-initializing constructor aff::ConstSharedHeap
      protected. Default constructor remains public (it is needed if we
      construct a container for ConstSharedHeap elements).

  - \b 29/12/2002 (thof)
    - aff::ConstArray and aff::ConstSeries now inherit from
      aff::ConstSharedHeap. See \ref sec_design_replicated.
    - added section about sparse interface
      (\ref sec_design_interface_sparse)
    - added section about accessing internals
      (\ref sec_design_interface_internals)
    - \b !! reworked class aff::util::Subarray and introduced
      aff::subarray
    - \b !! reworked class aff::util::Slice and introduced
      aff::slice
    - use "using" syntax for access declarations
    - overloaded, protected versions of write-access operators lead to
      conflicts in derived classes. Resolved that conflicts and made shared
      heap objects data members in container classes.
    - aff::Strided now provides Fortran style constructor
    - reworked array classes to use shared heap member data and correct set of
      access operators - looks much more natural now
    - explain concept of member data representation 
      (\ref sec_design_hierarchy)
    - reworked series classes in the same way as array classes
    - introduced lib/deepcopy.h
    - factored out common code in copyin functions to aff::util::deepcopy
    - now and aff::Array should be able to copy in the values of an
      aff::Series

  - \b 28/12/2002 (thof)
    - \b !! Wolfgang pointed out a fundamental design error: Classes
      aff::Array, aff::Series and aff::SharedHeap used a specialization of
      themselves as base class to implement a version for const element type
      (see \ref sec_design_const). Since specialization may only be declared
      after the general template itself, the base class definition is not
      available at the point it is used in the declaration of the general
      class template. We made the base class a completely independent class
      template. Base classes aff::ConstArray, aff::ConstSeries, and
      aff::ConstSharedHeap are introduced.
    - reworked documentation in
      -# lib/README
      -# lib/sharedheap.h
      -# array_dec.h

  - \b 27/12/2002 (thof)
    - completed Fortran interface documentation (\ref page_fortran)

  - \b 23/12/2002 (thof)
    - coded class aff::Subarray
    - coded class aff::Slice
    - introduced tests/helpertest.cc to test aff::Iterator,
      aff::Subarray and aff::Slice and tested helper classes
    - reorganized aff::Iterator code. Inheritance from Stepper does not work.
    - aff::Array::copyin() and aff::Array::copyout() work
    - introduced fortranshape.h and fortranshape.cc and herein
      aff::FortranArray and aff::util::FortranShape
    - Test of Fortran 77 interface works

  - \b 22/12/2002 (thof)
    - started test for interface to Fortran 77 code

  - \b 20/12/2002 (thof)
    - introduced aff/lib/seriesstepper.h and aff/lib/seriesstepper.cc
      which define aff::util::SeriesStepper
    - Access declarations are nor useable with functions
      that return a reference to *this. They must be
      reimplemented.
    - introduced class aff::LinearShape
    - provide appropriate Tstepper typedef in shape classes (requires forward
      declarations of stepper classes, because we do not like to include the
      full stepper header if we don't use it).
    - introduced aff::Iterator class template
    - reworked lib/README
    - moved SHeap to namespace util
    - reviewed README entirely
    - Remove unresolvable doxygen links in documentation parts of the code.
      Notice: There remain doxygen warning. Doxygen cannot deal with access
      declarations and has problems with member typedefs.

  - \b 19/12/2002 (thof)
    - \b !! aff::Array provides access to base classes through access
      functions and not through conversion operators.
    - Factored out header files for dump functions for different classes.
      This is necessary to use the SimpleRigidArray dump function within the
      Array class definition.
    - introduced function aff::util::StridedStepper::valid()
    - aff::Array is now tested and works in its basic functionality
      (no subarrays, no slices, no deep copy, etc.)

  - \b 18/12/2002 (thof)
    - defined dump function for Strided
    - started with tests/shapetest.cc
    - reworked stridedstepper to fit into new concept
    - essential correction in aff::Strided::collapse()
    - aff::Strided, aff::Shaper, and aff::util::StridedStepper
      passed basic tests
    - additionally aff::SharedHeap and aff::SimpleRigidArray passed their
      basic tests
    - activated scalar assignment with aff::Array::operator=()

  - \b 17/12/2002 (thof)
    - introduced class Series
    - \b !! Array now inherits privately from Strided
    - use access declarations to declare base class functions that should be
      visible in the public interface of aff::Array and aff::SharedHeap
    - introduced tests/seriestest.cc
    - introduced dump function for class Series

*/
/*======================================================================*/

/*! \page page_project_status Project status (AFF)

  $Id$

  \sa \ref page_changelog

  <TABLE>
    <TR><TD><B>Filename</B></TD>
        <TD><B>code is complete</B></TD>
        <TD><B>documentation is complete</B></TD>
        <TD><B>code is tested</B></TD>
        <TD><B>revision is required</B></TD>
    <TR><TD>libaff/README</TD>
        <TD>has no code</TD><TD> </TD><TD>has no code</TD>
        <TD>Explain Wolle's concept of multidimensional arrays.
            The HOWTO page needs a revision and many more examples.
        </TD>
    </TR>
    <TR><TD>libaff/README.groups</TD>
        <TD>has no code</TD><TD> </TD><TD>has no code</TD>
        <TD>proper grouping of documentation still needs to be done </TD>
    </TR>
    <TR><TD>libaff/array.h</TD>
        <TD>8/12/02</TD><TD>20/12/02</TD><TD>19/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/arrayoperators.h</TD>
        <TD>10/02/2004</TD><TD>15/05/2011 </TD><TD>10/02/2004 </TD><TD> </TD>
    </TR>
    <TR><TD>libaff/Carray.h</TD>
        <TD>14/05/2011 </TD><TD>14/05/2011 </TD><TD>15/05/2011 </TD><TD> </TD>
    </TR>
    <TR><TD>libaff/converters.h</TD>
        <TD> </TD><TD>15/05/2011 </TD><TD> </TD>
        <TD> </TD>
    </TR>
    <TR><TD>libaff/dump.cc</TD>
        <TD>18/12/2002</TD><TD>20/12/2002</TD><TD>18/12/2002</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/dump.h</TD>
        <TD>19/12/2002</TD><TD>20/12/2002</TD><TD> </TD><TD> </TD>
    </TR>
    <TR><TD>libaff/fortranshape.cc</TD>
        <TD>23/12/02</TD><TD> </TD><TD>23/12/02</TD><TD>There appear problems
        when using this without shifting the index range (BaseOne=false) and
        arrays that have negative index values.</TD>
    </TR>
    <TR><TD>libaff/fortranshape.h</TD>
        <TD>23/12/02</TD><TD> </TD><TD>23/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/iterator.h</TD>
        <TD>20/12/2002</TD><TD> </TD><TD>23/12/02</TD>
        <TD> </TD>
    </TR>
    <TR><TD>libaff/series.h</TD>
        <TD>19/12/2003</TD><TD> </TD><TD> </TD>
        <TD> </TD>
    </TR>
    <TR><TD>libaff/seriesoperators.h</TD>
        <TD>10/02/2004</TD><TD>15/05/2011 </TD><TD>10/02/2004 </TD><TD> </TD>
    </TR>
    <TR><TD>libaff/shaper.h</TD>
        <TD>12/12/02</TD><TD> </TD><TD>18/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/slice.h</TD>
        <TD>23/12/02</TD><TD> </TD><TD>23/12/02</TD>
        <TD> </TD>
    </TR>
    <TR><TD>libaff/subarray.h</TD>
        <TD>23/12/02</TD><TD> </TD><TD>23/12/02</TD>
        <TD> </TD>
    </TR>

    <TR><TD><BR><B>subdirectory "lib"</B></TD></TR>
    <TR><TD>libaff/lib/README</TD>
        <TD>has no code</TD><TD>20/12/02</TD><TD>has no code</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/checkedcast.h</TD>
        <TD>03/01/2003</TD><TD>03/01/2003</TD><TD>03/01/2003</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/collector.h</TD>
        <TD>21/04/2005</TD><TD>21/04/2005 </TD><TD>21/04/2005</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/deepcopy.h</TD>
        <TD>29/12/02</TD><TD>29/12/2002</TD><TD>29/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/error.cc</TD>
        <TD>16/12/02</TD><TD>20/12/2002</TD><TD>18/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/error.h</TD>
        <TD>16/12/02</TD><TD>20/12/2002</TD><TD>18/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/iteratable.h</TD>
        <TD> </TD><TD> </TD><TD> </TD><TD>removed 10/02/2004</TD>
    </TR>
    <TR><TD>libaff/lib/linearshape.h</TD>
        <TD>23/12/2003</TD><TD>27/04/2006</TD><TD>23/12/2003 </TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/operators.h</TD>
        <TD>10/02/2004</TD><TD>15/05/2011 </TD><TD>10/02/2004 </TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/rawarfun.h</TD>
        <TD>13/12/02</TD><TD> </TD><TD>15/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/sharedheap.h</TD>
        <TD>13/12/02</TD><TD>13/12/02</TD><TD>16/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/sharedheap_def.h</TD>
        <TD>13/12/02</TD><TD>13/12/02</TD><TD>16/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/simplearray.h</TD>
        <TD>13/12/02</TD><TD> </TD><TD>15/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/strided.cc</TD>
        <TD>13/12/02</TD><TD>23/12/02</TD><TD>18/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/strided.h</TD>
        <TD>13/12/02</TD><TD> </TD><TD>18/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/seriesstepper.cc</TD>
        <TD>20/12/02</TD><TD>20/12/02</TD><TD> </TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/seriesstepper.h</TD>
        <TD>20/12/02</TD><TD>20/12/02</TD><TD> </TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/stridedstepper.cc</TD>
        <TD>18/12/02</TD><TD>23/12/02</TD><TD>18/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/stridedstepper.h</TD>
        <TD>18/12/02</TD><TD> </TD><TD>18/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/types.h</TD>
        <TD>13/12/02</TD><TD>23/12/02</TD><TD>15/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/dump_macros.h</TD>
        <TD>19/12/02</TD><TD>19/12/02</TD><TD>19/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/dump_sharedheap.h</TD>
        <TD>19/12/02</TD><TD> </TD><TD>19/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/dump_series.h</TD>
        <TD>19/12/02</TD><TD> </TD><TD>19/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/dump_array.h</TD>
        <TD>19/12/02</TD><TD> </TD><TD>19/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/dump_strided.h</TD>
        <TD>19/12/02</TD><TD> </TD><TD>19/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/dump_simplerigidarray.h</TD>
        <TD>19/12/02</TD><TD> </TD><TD>19/12/02</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/lib/mapper.h</TD>
        <TD></TD><TD> </TD><TD></TD><TD> </TD>
    </TR>

    <TR><TD><BR><B>subdirectory "functions"</B></TD></TR>
    <TR><TD>libaff/functions/avg.h</TD>
        <TD>21/04/2005</TD><TD>21/04/2005</TD><TD>21/04/2005</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/functions/histo.h</TD>
        <TD>28/04/2005</TD><TD>28/04/2005</TD><TD>28/04/2005</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/functions/max.h</TD>
        <TD>21/04/2005</TD><TD>21/04/2005</TD><TD>21/04/2005</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/functions/min.h</TD>
        <TD>21/04/2005</TD><TD>21/04/2005</TD><TD>21/04/2005</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/functions/rms.h</TD>
        <TD>21/04/2005</TD><TD>21/04/2005</TD><TD>28/04/2005</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/functions/sqrsum.h</TD>
        <TD>13/06/2007</TD><TD>13/06/2007</TD><TD>13/06/2007</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/functions/sum.h</TD>
        <TD>13/06/2007</TD><TD>13/06/2007</TD><TD>13/06/2007</TD><TD> </TD>
    </TR>
    <TR><TD>libaff/functions/valmap.h</TD>
        <TD>28/04/2005</TD><TD>28/04/2005</TD><TD>28/04/2005</TD><TD> </TD>
    </TR>

    <TR><TD><BR><B>tests and examples</B></TD></TR>
    <TR><TD>libaff/tests/arraytest.cc</TD>
        <TD>19/12/2002</TD><TD> </TD><TD>19/12/2002</TD>
          <TD> </TD>
    </TR>
    <TR><TD>libaff/tests/functionstest.cc</TD>
        <TD>21/04/2005 </TD><TD>21/04/2005 </TD><TD>21/04/2005 </TD>
          <TD>complete as soon as other functions are provided </TD>
    </TR>
    <TR><TD>libaff/tests/helpertest.cc</TD>
        <TD>23/12/02</TD><TD> </TD><TD>23/12/02</TD>
          <TD> </TD>
    </TR>
    <TR><TD>libaff/tests/reprtest.cc</TD>
        <TD>16/12/02</TD><TD> </TD><TD>16/12/02</TD>
          <TD>does not check pathological cases</TD>
    </TR>
    <TR><TD>libaff/tests/seriestest.cc</TD>
        <TD> </TD><TD> </TD><TD> </TD>
          <TD> </TD>
    </TR>
    <TR><TD>libaff/tests/shapetest.cc</TD>
        <TD>18/12/02</TD><TD> </TD><TD>18/12/02</TD>
          <TD>does not check pathological cases</TD>
    </TR>
    <TR><TD>libaff/tests/simplearraytest.cc</TD>
        <TD>15/12/02</TD><TD> </TD><TD>15/12/02</TD>
          <TD>does not check pathological cases</TD>
    </TR>
    <TR><TD>libaff/tests/f77common.inc</TD>
        <TD>23/12/02</TD><TD>27/12/02</TD><TD>23/12/02</TD>
          <TD> </TD>
    </TR>
    <TR><TD>libaff/tests/f77interface.cc</TD>
        <TD>23/12/02</TD><TD>27/12/02</TD><TD>23/12/02</TD>
          <TD> </TD>
    </TR>
    <TR><TD>libaff/tests/f77procs.f</TD>
        <TD>23/12/02</TD><TD>27/12/02</TD><TD>23/12/02</TD>
          <TD> </TD>
    </TR>
    <TR><TD>libaff/tests/f77proto.h</TD>
        <TD>23/12/02</TD><TD>27/12/02</TD><TD>23/12/02</TD>
          <TD> </TD>
    </TR>
    <TR><TD>libaff/tests/f77test.cc</TD>
        <TD>23/12/02</TD><TD>27/12/02</TD><TD>23/12/02</TD>
          <TD> </TD>
    </TR>
  </TABLE>
*/

// ----- END OF doxygen.changelog.txt ----- 
